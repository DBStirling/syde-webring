name: Manual Add Node

on:
  workflow_dispatch:
    inputs:
      fullName:
        description: 'Full name'
        required: true
      year:
        description: 'Year (YYYY)'
        required: true
      website:
        description: 'Website URL'
        required: true
      skill1:
        description: 'Primary skill'
        required: true
        type: choice
        options: &skills
          - UX/UI
          - UXR
          - Graphic
          - Brand
          - Frontend
          - Backend
          - Full Stack
          - AI/ML
          - Quant
          - QA
          - Game Dev
          - SRE
          - Product
          - Project
          - Program
          - CAD/Simulation
          - Manufacturing
          - Materials
          - Automotive
          - Aero
          - Embedded
          - Signals
          - Sensors
          - Robotics
          - Power Systems
          - Communications
          - Data
          - Business
          - VC
          - IDK Yet!
          - Other
      skill2:
        description: 'Secondary skill'
        required: true
        type: choice
        options: *skills
      skill3:
        description: 'Tertiary skill'
        required: true
        type: choice
        options: *skills
      bio:
        description: 'Bio (optional)'
        required: false

jobs:
  add-node:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup git
        run: |
          git config --global user.name "webring-bot"
          git config --global user.email "
        
      - name: Create branch
        run: |
          BRANCH_NAME="add/${{ github.event.inputs.fullName.toLowerCase().replace(/[^a-z0-9]+/g, '-') }}-${{ github.run_id }}"
          git checkout -b "$BRANCH_NAME"
      
      - name: Fetch public/data.json
        run: |
          if [ ! -f public/data.json ]; then
            echo "Data file not found at public/data.json"
            exit 1
          fi
          jq '.nodes' public/data.json > data.json
      
      - name: Append to data.json
        run: |
          FULL_NAME="${{ github.event.inputs.fullName }}"
          YEAR="${{ github.event.inputs.year }}"
          WEBSITE="${{ github.event.inputs.website }}"
          SKILL1="${{ github.event.inputs.skill1 }}"
          SKILL2="${{ github.event.inputs.skill2 }}"
          SKILL3="${{ github.event.inputs.skill3 }}"
          BIO="${{ github.event.inputs.bio }}"

          NEXT_ID=$(jq '.nodes | length' data.json)
          NEW_NODE=$(jq -n --arg id "$NEXT_ID" \
                          --arg fullName "$FULL_NAME" \
                          --arg year "$YEAR" \
                          --arg website "$WEBSITE" \
                          --arg skill1 "$SKILL1" \
                          --arg skill2 "$SKILL2" \
                          --arg skill3 "$SKILL3" \
                          --arg bio "$BIO" \
                          '{
                            id: $id,
                            fullName: $fullName,
                            year: ($year | tonumber),
                            website: $website,
                            skills: {
                              skill1: $skill1,
                              skill2: $skill2,
                              skill3: $skill3
                            },
                            bio: $bio
                          }')

          jq --argjson newNode "$NEW_NODE" '.nodes += [$newNode]' data.json > updated_data.json
          mv updated_data.json data.json
      - name: Commit and push changes
        run: |
          git add data.json
          git commit -m "feat: add ${{ github.event.inputs.fullName }} (${YEAR})"
          git push origin "$BRANCH_NAME"
          echo "Branch $BRANCH_NAME created and changes pushed."
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          title: "Add ${{ github.event.inputs.fullName }} (${YEAR})"
          body: |
            Auto-generated from manual workflow_dispatch.
            
            ```json
            ${{ toJson(steps.append.outputs.newNode) }}
            ```
          base: main
          head: ${{ github.head_ref }}
          commit-message: "feat: add ${{ github.event.inputs.fullName }} (${YEAR})"
          labels: webring


      # - name: Setup Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 20

      # - name: Append node and open PR
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       const fs = require('fs');
      #       const path = require('path');

      #       const DATA_PATH = 'public/data.json';
      #       const BASE_BRANCH = 'main';

      #       const {
      #         fullName,
      #         year,
      #         website,
      #         skill1,
      #         skill2,
      #         skill3,
      #         bio
      #       } = inputs;

      #       const dataPath = path.join(process.cwd(), DATA_PATH);
      #       const data = JSON.parse(fs.readFileSync(dataPath, 'utf8'));

      #       const nextId = data.nodes.length
      #         ? Math.max(...data.nodes.map(n => Number(n.id) || 0)) + 1
      #         : 1;

      #       const newNode = {
      #         id: nextId,
      #         fullName,
      #         year: parseInt(year, 10),
      #         website: website.trim(),
      #         skills: { skill1, skill2, skill3 },
      #         bio: bio || ''
      #       };

      #       data.nodes.push(newNode);

      #       const updated = JSON.stringify(data, null, 2) + '\n';
      #       fs.writeFileSync(dataPath, updated);

      #       const branch = `add/${fullName.toLowerCase().replace(/[^a-z0-9]+/g,'-')}-${Date.now()}`;

      #       const { data: base } = await github.rest.repos.getBranch({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         branch: BASE_BRANCH
      #       });

      #       await github.rest.git.createRef({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         ref: `refs/heads/${branch}`,
      #         sha: base.commit.sha
      #       });

      #       const { data: fileData } = await github.rest.repos.getContent({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         path: DATA_PATH,
      #         ref: BASE_BRANCH
      #       });

      #       await github.rest.repos.createOrUpdateFileContents({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         path: DATA_PATH,
      #         message: `feat: add ${fullName} to webring`,
      #         content: Buffer.from(updated, 'utf8').toString('base64'),
      #         branch,
      #         sha: Array.isArray(fileData) ? undefined : fileData.sha
      #       });

      #       const pr = await github.rest.pulls.create({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         head: branch,
      #         base: BASE_BRANCH,
      #         title: `Add ${fullName} (${year})`,
      #         body: [
      #           'Auto-generated from manual workflow_dispatch.',
      #           '',
      #           '```json',
      #           JSON.stringify(newNode, null, 2),
      #           '```'
      #         ].join('\n')
      #       });

      #       console.log(`âœ… Pull Request #${pr.data.number} created: ${pr.data.html_url}`);
